%li.dropdown.active
  = link_to('#', { class: 'dropdown-toggle', 'data-toggle': 'dropdown', role: 'button', 'aria-haspopup': true, 'aria-expanded': false }) do
    = t("classes.#{engine.name.underscore}")
    %span.caret
  %ul.dropdown-menu
    - controllers = engine.to_s.gsub('::Engine', '::Configuration').constantize.registered_controllers
    - if controllers.respond_to?(:call)
      - controllers = controllers.call
    - controllers.each do |kontroller|  
      - resource_klass = kontroller.resource_class
      - if !Itsf::Backend.features?(:pundit) || policy(resource_klass).index?
        %li{ class: (kontroller == controller.class ? 'active' : nil) }
          - begin
            = link_to(send(engine.engine_name).url_for(controller: "/#{kontroller.controller_path}")) do
              = resource_klass.model_name.human(count: :other)
              %span.label.label-default
                - if respond_to?(:current_user) && current_user.respond_to?(:last_sign_in_at) && resource_klass.respond_to?(:column_names) && resource_klass.column_names.include?('updated_at')
                  = "#{resource_klass.where("updated_at > ?", current_user.last_sign_in_at).count}/#{resource_klass.count}"
                - else
                  = resource_klass.count
          - rescue ActionController::UrlGenerationError
